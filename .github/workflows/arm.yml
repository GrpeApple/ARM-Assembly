on:
  push:
      paths:
          - ARM/**
      workflow_dispatch:
  pull_request:
      paths:
          - ARM/**

defaults:
  run:
    working-directory: ./ARM

jobs:
    replace:
      runs-on: ubuntu-20.04

      steps:
        - uses: actions/checkout@v2
          with:
            ref: ${{github.event.pull_request.head.ref}}
        - name: Replace 'aarch64' with 'arm'
          run: sed -i 's|aarch64|arm|g' './Makefile'
          # For comments
        - name: Replace 'gnu-' with 'gnueabihf-'
          run: sed -i 's|gnu-|-gnueabihf-|g' './Makefile'
        - name: Commit and push
          run: |
            if [ -n "$(git status --porcelain)" ]; then # Check if it has changes.
              git config user.name github-actions
              git config user.email github-actions@github.com
              git add './Makefile'
              git commit -m 'Fix typos'
              git push origin
            fi

    build:
        needs: replace
        runs-on: ubuntu-20.04

        steps:
            - uses: actions/checkout@v2
            - name: Cache
              uses: actions/cache@v2
              id: cache-install-arm
              with:
                path: '~/install-arm'
                key: ${{secrets.UPDATE}}
            - name: Install gcc-arm-linux-gnueabihf
              env:
                CACHE_HIT: ${{steps.cache-install-arm.outputs.cache-hit}}
                UPDATE: ${{secrets.UPDATE}}
              run: |
                cache() { sudo dpkg -L "${1}" | while IFS= read -r f; do if test -f "${f}"; then echo "${f}"; fi; done | xargs cp --parents --target-directory ~/install-arm/; }
                recursive() { for i in $(apt-cache depends "${1}" | \grep 'Depends: ' | sed 's|Depends: ||g'); do if test -n "${i}"; then cache "${i}" else recursive "${i}"; fi; done; }
                if [ "$CACHE_HIT" == 'true' ]; then
                    sudo cp --verbose --force --recursive ~/install-arm/* /
                else
                    sudo apt install gcc-arm-linux-gnueabihf -y
                    mkdir -p ~/install-arm
                    recursive gcc-arm-linux-gnueabihf
                fi
            - name: Build all ARM programs
              run: |
                    make \
                    AS=arm-linux-gnueabihf-as \
                    LD=arm-linux-gnueabihf-ld \
                    CC=arm-linux-gnueabihf-gcc \
                    CL=arm-linux-gnueabihf-gcc \
                    all
            - name: Clean all
              run: |
                    make cleanall
